create or replace type body app#format is

    constructor function app#format return self as result 
    is
    begin

        self.initialize;
        return;

    end app#format;

    member procedure initialize 
    is
    begin

        --instantiate the clob
        self.reset_data;

    end initialize;

    member procedure reset_data 
    is
    begin

        --dbms_lob.erase(self.data, self.data_length, 1);
        self.data := null;
        self.data_length := 0;

        dbms_lob.createtemporary(self.data, false, dbms_lob.call);

    end reset_data;
      
    member procedure append
    (
        p_value        in varchar2,
        p_include_crlf in boolean default false,
        p_enclose_sq   in boolean default false
    ) 
    is
    begin

        app#fmt.append(self.data, p_value, p_include_crlf, p_enclose_sq);
        self.set_data_length;

    end append;

    member procedure append_clob(p_value in out nocopy clob) 
    is
    begin

        dbms_lob.append(self.data, p_value);
        self.set_data_length;

    end append_clob;

    member procedure set_data_length 
    is
    begin

        self.data_length := nvl(dbms_lob.getlength(self.data), 0);

    end set_data_length;

    member function to_varchar return varchar2
    is
        v_varchar varchar2(32000);
        i number;
    begin
  
        i := dbms_lob.getlength(self.data);
        if i < 32000 then
            v_varchar := dbms_lob.substr(self.data, i, 1);
        else
            raise_application_error(-20100,'Data exceeds max varchar2 length');    
        end if;
    
        return v_varchar;
  
    end to_varchar;
  
    member function to_clob return clob
    is
    begin
        return self.data;
    end to_clob;
  
end;