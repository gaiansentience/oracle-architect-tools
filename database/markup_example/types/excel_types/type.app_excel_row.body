create or replace type body app#excel_row is
    
    constructor function app#excel_row 
    return self as result 
    is
    begin
        self.initialize_row;
        return;
    end app#excel_row;
    
    member procedure initialize_row 
    is
    begin
        self.initialize;  
        self.row_cells := new app#excel_cells();
        self.row_xml   := null;
        dbms_lob.createtemporary(self.row_xml, false, dbms_lob.call);
    
    end initialize_row;
    
    member procedure add_data_cell
    (
        p_data_cell in app#excel_cell
    ) 
    is
    begin
        if self.row_cells is null then
            self.row_cells := new app#excel_cells();
        end if;
        self.row_cells.extend;
        self.row_cells(self.row_cells.last) := p_data_cell;
    
    end add_data_cell;
    
    member procedure add_data_cell
    (
        p_cell_value           in varchar2,
        p_formatted_attributes in varchar2 default null,
        p_formatted_data_attributes in varchar2 default null
    ) 
    is
        l_data_cell app#excel_cell;
    begin
        l_data_cell := new app#excel_cell(p_cell_value, p_formatted_attributes, p_formatted_data_attributes);
        self.add_data_cell(l_data_cell);
    end add_data_cell;
    
    member procedure to_xml 
    is
        r_tag varchar2(10) := 'Row';
    begin
        self.open(r_tag);
        for i in 1 .. self.row_cells.count loop
            self.row_cells(i).to_xml;
            app#fmt.append(self.data, self.row_cells(i).xml_cell);
        end loop;
        self.close(r_tag);
        self.row_xml := self.data;
    end to_xml;
    
end;